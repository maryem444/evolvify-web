{% extends 'base.html.twig' %}

{% block title %}Profil{% endblock %}

{% block content %}
<div class="container-fluid px-4">
    <!-- Top navigation bar with better spacing and modern look -->
    <div class="row mb-4" style="margin-top: 100px;">
        <div class="col-12">
            <nav class="bg-light py-3 px-3 rounded shadow-sm">
                <ol class="breadcrumb mb-0 d-flex align-items-center">
                    <li class="breadcrumb-item active fw-medium" style="font-size: 36px; font-weight: bold; color: #4a4a4a;"> <i class="fas fa-user ms-2"></i> Profil </li>
                </ol>
            </nav>
        </div>
    </div>
    
    {# Display flash messages #}
    {% for message in app.flashes('success') %}
        <div class="alert alert-success alert-dismissible fade show shadow-sm" role="alert">
            <i class="fas fa-check-circle me-2"></i> {{ message }}
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Fermer"></button>
        </div>
    {% endfor %}

    {% for message in app.flashes('error') %}
        <div class="alert alert-danger alert-dismissible fade show shadow-sm" role="alert">
            <i class="fas fa-exclamation-circle me-2"></i> {{ message }}
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Fermer"></button>
        </div>
    {% endfor %}
    
    <!-- Main profile card with enhanced design -->
    <div class="card mb-4 shadow-lg rounded-3 border-0 overflow-hidden">
        <div class="card-header bg-primary text-white py-3">
            <h4 class="mb-0"><i class="fas fa-user-circle me-2"></i>Profil Utilisateur</h4>
        </div>
        <div class="card-body p-0">
            <div class="row g-0">
                <!-- Profile Photo Section with better styling -->
                <div class="col-md-4 bg-light" style="border-right: 1px solid #eee;">
                    <div class="p-4">
                        <div class="text-center mb-4">
                            <div class="position-relative d-inline-block">
                                {% if user.profilePhoto %}
                                    <img src="{{ user.profilePhotoUrl }}" alt="Photo de profil" class="img-fluid rounded-circle shadow" style="width: 180px; height: 180px; object-fit: cover; border: 4px solid white;">
                                {% else %}
                                    <img src="{{ asset('assets/img/profile.png') }}" alt="Photo de profil par défaut" class="img-fluid rounded-circle shadow" style="width: 180px; height: 180px; object-fit: cover; border: 4px solid white;">
                                {% endif %}
                                
                                {% if isOwnProfile %}
                                <button class="btn btn-sm btn-light rounded-circle position-absolute bottom-0 end-0 shadow-sm" data-bs-toggle="modal" data-bs-target="#personalInfoModal" style="width: 40px; height: 40px;">
                                    <i class="fas fa-camera text-primary"></i>
                                </button>
                                {% endif %}
                            </div>
                        </div>

                        <h3 class="text-center fw-bold mb-3">{{ user.firstname }} {{ user.lastname }}</h3>
                        
                        <div class="badge bg-primary text-white mb-3 d-block w-75 mx-auto py-2 fs-6">
                            {% if user.role == 'RESPONSABLE_RH' %}
                                <i class="fas fa-users-cog me-1"></i>
                                Responsable RH
                            {% elseif user.role == 'CHEF_PROJET' %}
                                <i class="fas fa-project-diagram me-1"></i>
                                Chef de projet
                            {% elseif user.role == 'EMPLOYEE' %}
                                <i class="fas fa-user-tie me-1"></i>
                                Employé
                            {% else %}
                                <i class="fas fa-user me-1"></i>
                                Candidat
                            {% endif %}
                        </div>

                        <p class="text-center text-muted mb-4">
                            <i class="fas fa-calendar-alt me-1"></i>
                            A rejoint le :
                            {{ user.joiningDate ? user.joiningDate|date('d-m-Y') : 'Non défini' }}
                        </p>

                        <!-- Action buttons with improved layout -->
                        <div class="d-grid gap-2">
                            {% if isOwnProfile %}
                                <button class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#personalInfoModal">
                                    <i class="fas fa-edit me-2"></i>Modifier les informations
                                </button>
                                <button class="btn btn-outline-info" data-bs-toggle="modal" data-bs-target="#facialRecognitionModal">
                                    <i class="fas fa-user-shield me-2"></i>Configurer reconnaissance faciale
                                </button>
                            {% else %}
                                <button class="btn btn-warning" data-bs-toggle="modal" data-bs-target="#contactModal">
                                    <i class="fas fa-envelope me-2"></i>Envoyer un message
                                </button>
                            {% endif %}
                        </div>
                    </div>
                </div>

                <!-- Profile Details Section with improved card design -->
                <div class="col-md-8">
                    <div class="p-4">
                        <h4 class="mb-4 border-bottom pb-3">
                            <i class="fas fa-id-card me-2 text-primary"></i>
                            Informations personnelles
                        </h4>

                        <div class="row g-4">
                            <div class="col-md-6">
                                <div class="card h-100 shadow-sm border-0 rounded-3 hover-shadow">
                                    <div class="card-body">
                                        <div class="d-flex align-items-center mb-2">
                                            <div class="icon-circle bg-primary-light rounded-circle p-2 me-3">
                                                <i class="fas fa-phone text-primary"></i>
                                            </div>
                                            <h6 class="mb-0 text-muted">Téléphone</h6>
                                        </div>
                                        <p class="mb-0 fs-5">{{ user.numTel ? user.numTel : 'Non renseigné' }}</p>
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="card h-100 shadow-sm border-0 rounded-3 hover-shadow">
                                    <div class="card-body">
                                        <div class="d-flex align-items-center mb-2">
                                            <div class="icon-circle bg-primary-light rounded-circle p-2 me-3">
                                                <i class="fas fa-envelope text-primary"></i>
                                            </div>
                                            <h6 class="mb-0 text-muted">Email</h6>
                                        </div>
                                        <p class="mb-0 fs-5 text-primary">{{ user.email }}</p>
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="card h-100 shadow-sm border-0 rounded-3 hover-shadow">
                                    <div class="card-body">
                                        <div class="d-flex align-items-center mb-2">
                                            <div class="icon-circle bg-primary-light rounded-circle p-2 me-3">
                                                <i class="fas fa-birthday-cake text-primary"></i>
                                            </div>
                                            <h6 class="mb-0 text-muted">Date de naissance</h6>
                                        </div>
                                        <p class="mb-0 fs-5">{{ user.birthdayDate ? user.birthdayDate|date('d F Y') : 'Non renseignée' }}</p>
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="card h-100 shadow-sm border-0 rounded-3 hover-shadow">
                                    <div class="card-body">
                                        <div class="d-flex align-items-center mb-2">
                                            <div class="icon-circle bg-primary-light rounded-circle p-2 me-3">
                                                <i class="fas fa-venus-mars text-primary"></i>
                                            </div>
                                            <h6 class="mb-0 text-muted">Genre</h6>
                                        </div>
                                        <p class="mb-0 fs-5">{{ user.gender == 'HOMME' ? 'Homme' : 'Femme' }}</p>
                                    </div>
                                </div>
                            </div>

                            {% if user.role == 'RESPONSABLE_RH' or user.role == 'CHEF_PROJET' or user.role == 'EMPLOYEE' %}
                            <div class="col-md-6">
                                <div class="card h-100 shadow-sm border-0 rounded-3 hover-shadow">
                                    <div class="card-body">
                                        <div class="d-flex align-items-center mb-2">
                                            <div class="icon-circle bg-primary-light rounded-circle p-2 me-3">
                                                <i class="fas fa-umbrella-beach text-primary"></i>
                                            </div>
                                            <h6 class="mb-0 text-muted">Jours de congé restants</h6>
                                        </div>
                                        <p class="mb-0 fs-5">{{ user.congeRestant ? user.congeRestant : '0' }}</p>
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="card h-100 shadow-sm border-0 rounded-3 hover-shadow">
                                    <div class="card-body">
                                        <div class="d-flex align-items-center mb-2">
                                            <div class="icon-circle bg-primary-light rounded-circle p-2 me-3">
                                                <i class="fas fa-home text-primary"></i>
                                            </div>
                                            <h6 class="mb-0 text-muted">Jours de télétravail</h6>
                                        </div>
                                        <p class="mb-0 fs-5">{{ user.ttRestants ? user.ttRestants : '0' }}</p>
                                    </div>
                                </div>
                            </div>
                            {% endif %}
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Contact Modal with improved design -->
<div class="modal fade" id="contactModal" tabindex="-1" aria-labelledby="contactModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content border-0 shadow">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="contactModalLabel">
                    <i class="fas fa-envelope me-2"></i>
                    Envoyer un message à {{ user.firstname }}
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Fermer"></button>
            </div>
            <form action="{{ path('app_send_message') }}" method="post">
                <div class="modal-body p-4">
                    <input type="hidden" name="recipient_id" value="{{ user.id }}">
                    <div class="mb-3">
                        <label for="subject" class="form-label fw-medium">Sujet</label>
                        <div class="input-group">
                            <span class="input-group-text bg-light">
                                <i class="fas fa-heading text-primary"></i>
                            </span>
                            <input type="text" class="form-control" id="subject" name="subject" required placeholder="Entrez le sujet du message">
                        </div>
                    </div>
                    <div class="mb-3">
                        <label for="message" class="form-label fw-medium">Message</label>
                        <div class="input-group">
                            <span class="input-group-text bg-light">
                                <i class="fas fa-comment-dots text-primary"></i>
                            </span>
                            <textarea class="form-control" id="message" name="message" rows="5" required placeholder="Rédigez votre message ici..."></textarea>
                        </div>
                    </div>
                </div>
                <div class="modal-footer bg-light">
                    <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">
                        <i class="fas fa-times me-1"></i>
                        Annuler
                    </button>
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-paper-plane me-1"></i>
                        Envoyer
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Combined Personal Information Edit Modal with improved design -->
<div class="modal fade" id="personalInfoModal" tabindex="-1" aria-labelledby="personalInfoModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content border-0 shadow">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="personalInfoModalLabel">
                    <i class="fas fa-user-edit me-2"></i>
                    Modifier les informations personnelles
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Fermer"></button>
            </div>

            <!-- Profile Photo Form with better layout -->
            <div class="modal-body p-0">
                <ul class="nav nav-tabs nav-fill" id="profileTabs" role="tablist">
                    <li class="nav-item" role="presentation">
                        <button class="nav-link active py-3" id="photo-tab" data-bs-toggle="tab" data-bs-target="#photo-tab-pane" type="button" role="tab" aria-controls="photo-tab-pane" aria-selected="true">
                            <i class="fas fa-camera me-2"></i>Photo de profil
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link py-3" id="info-tab" data-bs-toggle="tab" data-bs-target="#info-tab-pane" type="button" role="tab" aria-controls="info-tab-pane" aria-selected="false">
                            <i class="fas fa-id-card me-2"></i>Informations personnelles
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link py-3" id="security-tab" data-bs-toggle="tab" data-bs-target="#security-tab-pane" type="button" role="tab" aria-controls="security-tab-pane" aria-selected="false">
                            <i class="fas fa-user-shield me-2"></i>Authentification faciale
                        </button>
                    </li>
                </ul>
                
                <div class="tab-content p-4" id="profileTabsContent">
                    <!-- Photo Tab -->
                    <div class="tab-pane fade show active" id="photo-tab-pane" role="tabpanel" aria-labelledby="photo-tab" tabindex="0">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="d-flex flex-column align-items-center">
                                    <h6 class="mb-4 fw-bold">Modifier votre photo de profil</h6>
                                    <div class="mb-4">
                                        <div id="currentPhotoContainer" class="position-relative">
                                            {% if user.profilePhoto %}
                                                <img src="{{ user.profilePhotoUrl }}" alt="Photo de profil actuelle" id="photoPreview" class="img-fluid rounded-circle mb-2 shadow" style="width: 150px; height: 150px; object-fit: cover; border: 3px solid #e9ecef;">
                                            {% else %}
                                                <img src="{{ asset('assets/img/profile.png') }}" alt="Photo de profil par défaut" id="photoPreview" class="img-fluid rounded-circle mb-2 shadow" style="width: 150px; height: 150px; object-fit: cover; border: 3px solid #e9ecef;">
                                            {% endif %}
                                        </div>
                                    </div>

                                    {{ form_start(photoForm, {
                                        'action': path('app_profile_update_photo'),
                                        'attr': {
                                            'id': 'photoForm',
                                            'enctype': 'multipart/form-data',
                                            'class': 'text-center w-75'
                                        }
                                    }) }}

                                    <div class="mb-4">
                                        <div class="input-group">
                                            <span class="input-group-text bg-light">
                                                <i class="fas fa-upload text-primary"></i>
                                            </span>
                                            {{ form_widget(photoForm.photo, {'attr': {'class': 'form-control', 'onchange': 'previewPhoto(this)'}}) }}
                                        </div>
                                        <small class="text-muted">Formats acceptés : JPG, PNG (Max 5MB)</small>
                                    </div>

                                    <div class="text-center">
                                        <button type="submit" class="btn btn-primary">
                                            <i class="fas fa-save me-2"></i>Mettre à jour la photo
                                        </button>
                                    </div>

                                    {{ form_rest(photoForm) }}
                                    {{ form_end(photoForm) }}
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Info Tab -->
                    <div class="tab-pane fade" id="info-tab-pane" role="tabpanel" aria-labelledby="info-tab" tabindex="0">
                        <form method="post" action="{{ path('app_profile') }}" id="infoForm">
                            <!-- Non-editable fields -->
                            <div class="row mb-4">
                                <div class="col-12">
                                    <h6 class="mb-3 fw-bold text-muted">Informations système</h6>
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label for="email" class="form-label">Email</label>
                                    <div class="input-group">
                                        <span class="input-group-text bg-light">
                                            <i class="fas fa-envelope text-primary"></i>
                                        </span>
                                        <input type="email" class="form-control bg-light" id="email" name="email" value="{{ user.email }}" disabled>
                                    </div>
                                    <small class="text-muted fst-italic">L'email ne peut pas être modifié</small>
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label for="joiningDate" class="form-label">Date d'arrivée</label>
                                    <div class="input-group">
                                        <span class="input-group-text bg-light">
                                            <i class="fas fa-calendar-check text-primary"></i>
                                        </span>
                                        <input type="text" class="form-control bg-light" id="joiningDate" value="{{ user.joiningDate ? user.joiningDate|date('d-m-Y') : '' }}" disabled>
                                    </div>
                                    <small class="text-muted fst-italic">La date d'arrivée ne peut pas être modifiée</small>
                                </div>

                                <div class="col-md-6">
                                    <label for="role" class="form-label">Rôle</label>
                                    <div class="input-group">
                                        <span class="input-group-text bg-light">
                                            <i class="fas fa-user-tag text-primary"></i>
                                        </span>
                                        <input type="text" class="form-control bg-light" id="role" value="{% if user.role == 'RESPONSABLE_RH' %}Gestion des talents{% elseif user.role == 'CHEF_PROJET' %}Gestion de projet{% elseif user.role == 'EMPLOYEE' %}Membre d'équipe{% else %}Candidat{% endif %}" disabled>
                                    </div>
                                    <small class="text-muted fst-italic">Le rôle ne peut pas être modifié</small>
                                </div>
                            </div>

                            <!-- Editable fields -->
                            <div class="row">
                                <div class="col-12">
                                    <h6 class="mb-3 fw-bold">Informations personnelles</h6>
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label for="firstname" class="form-label">Prénom</label>
                                    <div class="input-group">
                                        <span class="input-group-text bg-light">
                                            <i class="fas fa-user text-primary"></i>
                                        </span>
                                        <input type="text" class="form-control" id="firstname" name="firstname" value="{{ user.firstname }}">
                                    </div>
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label for="lastname" class="form-label">Nom</label>
                                    <div class="input-group">
                                        <span class="input-group-text bg-light">
                                            <i class="fas fa-user-tag text-primary"></i>
                                        </span>
                                        <input type="text" class="form-control" id="lastname" name="lastname" value="{{ user.lastname }}">
                                    </div>
                                </div>

                                <div class="col-md-6 mb-3">
                                    <label for="numTel" class="form-label">Numéro de téléphone</label>
                                    <div class="input-group">
                                        <span class="input-group-text bg-light">
                                            <i class="fas fa-phone text-primary"></i>
                                        </span>
                                        <input type="tel" class="form-control" id="numTel" name="numTel" value="{{ user.numTel }}">
                                    </div>
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label for="birthdayDate" class="form-label">Date de naissance</label>
                                    <div class="input-group">
                                        <span class="input-group-text bg-light">
                                            <i class="fas fa-birthday-cake text-primary"></i>
                                        </span>
                                        <input type="date" class="form-control {% if user.birthdateEdited %}bg-light{% endif %}" id="birthdayDate" name="birthdayDate" value="{{ user.birthdayDate ? user.birthdayDate|date('Y-m-d') : '' }}" {% if user.birthdateEdited %}disabled{% endif %}>
                                    </div>
                                    {% if user.birthdateEdited %}
                                        <small class="text-muted fst-italic">La date de naissance ne peut être définie qu'une seule fois</small>
                                    {% else %}
                                        <small class="text-warning"><i class="fas fa-exclamation-triangle me-1"></i>Important : Vous ne pouvez définir votre date de naissance qu'une seule fois !</small>
                                    {% endif %}
                                </div>

                                <div class="col-md-6">
                                    <label for="gender" class="form-label">Genre</label>
                                    <div class="input-group">
                                        <span class="input-group-text bg-light">
                                            <i class="fas fa-venus-mars text-primary"></i>
                                        </span>
                                        <select class="form-select" id="gender" name="gender">
                                            <option value="HOMME" {% if user.gender == 'HOMME' %} selected {% endif %}>Homme</option>
                                            <option value="FEMME" {% if user.gender == 'FEMME' %} selected {% endif %}>Femme</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="text-end mt-4">
                                <button type="button" class="btn btn-outline-secondary me-2" data-bs-dismiss="modal">
                                    <i class="fas fa-times me-1"></i>Annuler
                                </button>
                                <button type="submit" class="btn btn-primary">
                                    <i class="fas fa-save me-1"></i>Enregistrer les modifications
                                </button>
                            </div>
                        </form>
                    </div>
                    
                    <!-- Facial Recognition Tab -->
                    <div class="tab-pane fade" id="security-tab-pane" role="tabpanel" aria-labelledby="security-tab" tabindex="0">
                        <div class="text-center mb-4">
                            <div class="alert {{ user.facialAuthEnabled ? 'alert-success' : 'alert-info' }} shadow-sm">
                                <i class="fas {{ user.facialAuthEnabled ? 'fa-check-circle' : 'fa-info-circle' }} me-2"></i>
                                {% if user.facialAuthEnabled %}
                                    <span class="fw-medium">La reconnaissance faciale est activée sur votre compte.</span>
                                {% else %}
                                    <span class="fw-medium">La reconnaissance faciale n'est pas encore configurée.</span>
                                {% endif %}
                            </div>
                        </div>

                        <div class="video-container position-relative mb-4" style="text-align: center;">
                            <video id="facialSetupVideo" autoplay playsinline style="width: 100%; max-width: 400px; border-radius: 12px; margin: 0 auto; box-shadow: 0 4px 12px rgba(0,0,0,0.1);"></video>
                            <div id="facialScanner" class="position-absolute top-0 start-0 w-100 h-100" style="border: 2px solid #00ff00; border-radius: 12px; animation: scanning 2s infinite; display: none;"></div>
                            <canvas id="facialCanvas" style="display: none;"></canvas>
                        </div>

                        <div id="facialStatus" class="text-center mb-4 py-2 bg-light rounded-3 shadow-sm">
                            <span class="text-primary fw-medium">
                                <i class="fas fa-info-circle me-2"></i> Cliquez sur "Démarrer la configuration" pour commencer
                            </span>
                        </div>

                        <div class="d-flex justify-content-center gap-3 mb-4">
                            <button type="button" class="btn btn-primary" id="startFacialSetupBtn">
                                <i class="fas fa-camera me-2"></i> Démarrer la configuration
                            </button>
                            <button type="button" class="btn btn-success" id="captureFaceBtn" style="display: none;">
                                <i class="fas fa-camera-retro me-2"></i> Capturer
                            </button>
                            <button type="button" class="btn btn-primary" id="saveFacialDataBtn" style="display: none;">
                                <i class="fas fa-save me-2"></i> Enregistrer
                            </button>
                        </div>

                        <div class="text-center mb-4">
                            <button type="button" class="btn btn-danger" id="disableFacialAuthBtn" style="{{ user.facialAuthEnabled ? '' : 'display: none;' }}">
                                <i class="fas fa-times-circle me-2"></i> Désactiver la reconnaissance faciale
                            </button>
                        </div>

                        <div class="alert alert-warning mt-4">
                            <div class="d-flex">
                                <div class="me-3 fs-4">
                                    <i class="fas fa-shield-alt"></i>
                                </div>
                                <div>
                                    <h6 class="alert-heading fw-bold mb-2">Note de sécurité:</h6>
                                    <p class="mb-0 small">La reconnaissance faciale est une méthode d'authentification pratique, mais pas aussi sécurisée qu'un mot de passe fort. Pour une sécurité optimale, utilisez-la comme méthode d'authentification secondaire.</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

{% block javascripts %}
    {{ parent() }}
    <script>

// Fonction de prévisualisation de photo de profil
function previewPhoto(input) {
    if (input.files && input.files[0]) {
        var reader = new FileReader();
        
        reader.onload = function (e) {
            document.getElementById('photoPreview').src = e.target.result;
        };
        
        reader.readAsDataURL(input.files[0]);
    }
}

// Face Recognition Setup
document.addEventListener('DOMContentLoaded', function() {
    const facialRecognitionModal = document.getElementById('facialRecognitionModal');
    if (!facialRecognitionModal) return;

    // Elements
    const startBtn = document.getElementById('startFacialSetupBtn');
    const captureBtn = document.getElementById('captureFaceBtn');
    const saveBtn = document.getElementById('saveFacialDataBtn');
    const disableBtn = document.getElementById('disableFacialAuthBtn');
    const video = document.getElementById('facialSetupVideo');
    const canvas = document.getElementById('facialCanvas');
    const scanner = document.getElementById('facialScanner');
    const status = document.getElementById('facialStatus');
    
    let stream = null;
    let faceDetected = false;
    let capturedImageData = null;

    // Check if face-api.js is loaded
    function loadFaceAPI() {
        return new Promise((resolve, reject) => {
            if (typeof faceapi !== 'undefined') {
                resolve();
                return;
            }
            
            const script = document.createElement('script');
            script.src = 'https://cdn.jsdelivr.net/npm/face-api.js@0.22.2/dist/face-api.min.js';
            script.onload = () => resolve();
            script.onerror = () => reject(new Error('Failed to load face-api.js'));
            document.head.appendChild(script);
        });
    }

    // Load face detection models
    async function loadModels() {
        status.innerHTML = '<span class="text-primary"><i class="fas fa-spinner fa-spin"></i> Chargement des modèles...</span>';
        
        try {
            await Promise.all([
                faceapi.nets.tinyFaceDetector.loadFromUri('/models'),
                faceapi.nets.faceLandmark68Net.loadFromUri('/models'),
                faceapi.nets.faceRecognitionNet.loadFromUri('/models')
            ]);
            
            return true;
        } catch (error) {
            console.error('Error loading face models:', error);
            status.innerHTML = '<span class="text-danger"><i class="fas fa-exclamation-triangle"></i> Erreur lors du chargement des modèles</span>';
            return false;
        }
    }

    // Start camera
    async function startCamera() {
        try {
            stream = await navigator.mediaDevices.getUserMedia({ video: {} });
            video.srcObject = stream;
            
            return true;
        } catch (err) {
            console.error('Error accessing camera:', err);
            status.innerHTML = '<span class="text-danger"><i class="fas fa-exclamation-triangle"></i> Impossible d\'accéder à la caméra. Veuillez autoriser l\'accès.</span>';
            return false;
        }
    }

    // Stop camera
    function stopCamera() {
        if (stream) {
            stream.getTracks().forEach(track => track.stop());
            video.srcObject = null;
        }
    }

    // Start face detection
    function startFaceDetection() {
        let faceCheckInterval = setInterval(async () => {
            if (!video.srcObject) {
                clearInterval(faceCheckInterval);
                return;
            }
            
            try {
                const detection = await faceapi.detectSingleFace(
                    video, 
                    new faceapi.TinyFaceDetectorOptions()
                ).withFaceLandmarks();
                
                if (detection) {
                    faceDetected = true;
                    status.innerHTML = '<span class="text-success"><i class="fas fa-check-circle"></i> Visage détecté! Vous pouvez capturer maintenant.</span>';
                    captureBtn.style.display = 'inline-block';
                } else {
                    faceDetected = false;
                    status.innerHTML = '<span class="text-warning"><i class="fas fa-user-alt-slash"></i> Aucun visage détecté. Positionnez-vous face à la caméra.</span>';
                }
            } catch (error) {
                console.error('Face detection error:', error);
            }
        }, 500);
        
        // Store the interval ID in case we need to clear it
        video.dataset.faceCheckInterval = faceCheckInterval;
    }

    // Initialize setup
    startBtn.addEventListener('click', async function() {
        startBtn.disabled = true;
        startBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Initialisation...';
        
        try {
            // Load face-api.js if needed
            await loadFaceAPI();
            
            // Load models
            const modelsLoaded = await loadModels();
            if (!modelsLoaded) {
                startBtn.disabled = false;
                startBtn.innerHTML = '<i class="fas fa-camera"></i> Réessayer';
                return;
            }
            
            // Start camera
            const cameraStarted = await startCamera();
            if (!cameraStarted) {
                startBtn.disabled = false;
                startBtn.innerHTML = '<i class="fas fa-camera"></i> Réessayer';
                return;
            }
            
            // Show scanner animation
            scanner.style.display = 'block';
            
            // Start face detection
            startFaceDetection();
            
            // Hide start button, show capture button
            startBtn.style.display = 'none';
            captureBtn.style.display = 'inline-block';
            
            status.innerHTML = '<span class="text-primary"><i class="fas fa-search"></i> Recherche de visage...</span>';
            
        } catch (error) {
            console.error('Setup error:', error);
            status.innerHTML = '<span class="text-danger"><i class="fas fa-exclamation-triangle"></i> Une erreur est survenue</span>';
            startBtn.disabled = false;
            startBtn.innerHTML = '<i class="fas fa-camera"></i> Réessayer';
        }
    });

    // Capture face
    captureBtn.addEventListener('click', async function() {
        if (!faceDetected) {
            status.innerHTML = '<span class="text-warning"><i class="fas fa-exclamation-circle"></i> Aucun visage détecté. Veuillez vous positionner face à la caméra.</span>';
            return;
        }
        
        // Setup canvas and draw video frame
        canvas.width = video.videoWidth;
        canvas.height = video.videoHeight;
        canvas.getContext('2d').drawImage(video, 0, 0, canvas.width, canvas.height);
        
        // Get face data with descriptor
        try {
            const detection = await faceapi.detectSingleFace(
                canvas, 
                new faceapi.TinyFaceDetectorOptions()
            ).withFaceLandmarks().withFaceDescriptor();
            
            if (!detection) {
                status.innerHTML = '<span class="text-danger"><i class="fas fa-times-circle"></i> Impossible d\'extraire les caractéristiques du visage. Veuillez réessayer.</span>';
                return;
            }
            
            // Convert image to data URL for preview and server submission
            capturedImageData = {
                imageData: canvas.toDataURL('image/jpeg'),
                faceDescriptor: Array.from(detection.descriptor)
            };
            
            status.innerHTML = '<span class="text-success"><i class="fas fa-check-circle"></i> Visage capturé avec succès!</span>';
            saveBtn.style.display = 'block';
            
            // Optionally show preview
            const previewImg = document.createElement('img');
            previewImg.src = capturedImageData.imageData;
            previewImg.style.maxWidth = '150px';
            previewImg.style.borderRadius = '10px';
            previewImg.style.marginTop = '10px';
            
            const previewContainer = document.createElement('div');
            previewContainer.className = 'text-center mt-3';
            previewContainer.appendChild(previewImg);
            
            // Remove previous preview if exists
            const oldPreview = document.querySelector('.facial-preview');
            if (oldPreview) oldPreview.remove();
            
            // Add preview class for easy removal later
            previewContainer.classList.add('facial-preview');
            
            status.parentNode.insertBefore(previewContainer, status.nextSibling);
            
        } catch (error) {
            console.error('Face capture error:', error);
            status.innerHTML = '<span class="text-danger"><i class="fas fa-exclamation-triangle"></i> Erreur lors de la capture</span>';
        }
    });

    // Save facial data
    saveBtn.addEventListener('click', async function() {
        if (!capturedImageData) {
            status.innerHTML = '<span class="text-warning"><i class="fas fa-exclamation-circle"></i> Aucune donnée faciale à enregistrer</span>';
            return;
        }
        
        saveBtn.disabled = true;
        saveBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Enregistrement...';
        
        try {
            const response = await fetch('/save-facial-data', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
                },
                body: JSON.stringify(capturedImageData)
            });
            
            // Ajoutez cette partie pour mieux déboguer
            const responseText = await response.text();
            let result;
            
            try {
                result = JSON.parse(responseText);
            } catch (error) {
                console.error('Invalid JSON response:', responseText);
                status.innerHTML = '<span class="text-danger"><i class="fas fa-times-circle"></i> Réponse serveur invalide</span>';
                saveBtn.disabled = false;
                saveBtn.innerHTML = 'Enregistrer';
                return;
            }
            
            if (result.success) {
                status.innerHTML = '<span class="text-success"><i class="fas fa-check-circle"></i> Configuration de la reconnaissance faciale réussie!</span>';
                
                // Update UI to show success
                saveBtn.style.display = 'none';
                captureBtn.style.display = 'none';
                disableBtn.style.display = 'block';
                
                // Update alert status
                const alertDiv = document.querySelector('.modal-body .alert');
                if (alertDiv) {
                    alertDiv.className = 'alert alert-success';
                    alertDiv.innerHTML = '<i class="fas fa-check-circle me-2"></i> La reconnaissance faciale est activée sur votre compte.';
                }
                
                // Clear the camera
                stopCamera();
            } else {
                status.innerHTML = '<span class="text-danger"><i class="fas fa-times-circle"></i> ' + (result.message || 'Erreur lors de l\'enregistrement') + '</span>';
                saveBtn.disabled = false;
                saveBtn.innerHTML = 'Enregistrer';
            }
        } catch (error) {
            console.error('Save error:', error);
            status.innerHTML = '<span class="text-danger"><i class="fas fa-exclamation-triangle"></i> Erreur de connexion</span>';
            saveBtn.disabled = false;
            saveBtn.innerHTML = 'Enregistrer';
        }
    });

    // Disable facial recognition
    disableBtn.addEventListener('click', async function() {
        disableBtn.disabled = true;
        disableBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Désactivation...';
        
        try {
            const response = await fetch('/disable-facial-auth', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
                }
            });
            
            const result = await response.json();
            
            if (result.success) {
                status.innerHTML = '<span class="text-success"><i class="fas fa-check-circle"></i> La reconnaissance faciale a été désactivée avec succès</span>';
                
                // Update UI
                disableBtn.style.display = 'none';
                
                // Update alert status
                const alertDiv = document.querySelector('.modal-body .alert');
                if (alertDiv) {
                    alertDiv.className = 'alert alert-info';
                    alertDiv.innerHTML = '<i class="fas fa-info-circle me-2"></i> La reconnaissance faciale n\'est pas encore configurée.';
                }
            } else {
                status.innerHTML = '<span class="text-danger"><i class="fas fa-times-circle"></i> ' + (result.message || 'Erreur lors de la désactivation') + '</span>';
                disableBtn.disabled = false;
                disableBtn.innerHTML = '<i class="fas fa-times-circle"></i> Désactiver la reconnaissance faciale';
            }
        } catch (error) {
            console.error('Disable error:', error);
            status.innerHTML = '<span class="text-danger"><i class="fas fa-exclamation-triangle"></i> Erreur de connexion</span>';
            disableBtn.disabled = false;
            disableBtn.innerHTML = '<i class="fas fa-times-circle"></i> Désactiver la reconnaissance faciale';
        }
    });

    // Clean up when modal is closed
    facialRecognitionModal.addEventListener('hidden.bs.modal', function() {
        stopCamera();
        
        // Clear any interval
        if (video.dataset.faceCheckInterval) {
            clearInterval(parseInt(video.dataset.faceCheckInterval));
        }
        
        // Reset UI
        scanner.style.display = 'none';
        captureBtn.style.display = 'none';
        saveBtn.style.display = 'none';
        startBtn.style.display = 'inline-block';
        startBtn.disabled = false;
        startBtn.innerHTML = '<i class="fas fa-camera"></i> Démarrer la configuration';
        
        status.innerHTML = '<span class="text-primary"><i class="fas fa-info-circle"></i> Cliquez sur "Démarrer la configuration" pour commencer</span>';
        
        // Remove any preview
        const oldPreview = document.querySelector('.facial-preview');
        if (oldPreview) oldPreview.remove();
        
        // Clear captured data
        capturedImageData = null;
        faceDetected = false;
    });
});

// Add CSS for the scanning animation
document.addEventListener('DOMContentLoaded', function() {
    const style = document.createElement('style');
    style.textContent = `
        @keyframes scanning {
            0% { box-shadow: 0 0 0 0 rgba(0, 255, 0, 0.2); }
            50% { box-shadow: 0 0 0 10px rgba(0, 255, 0, 0.2); }
            100% { box-shadow: 0 0 0 0 rgba(0, 255, 0, 0.2); }
        }
    `;
    document.head.appendChild(style);
});
    </script>

{% endblock %}
{% endblock %}