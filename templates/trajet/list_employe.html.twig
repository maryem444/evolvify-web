{% extends 'base.html.twig' %}

{% block title %}Liste des Trajets{% endblock %}

{% block content %}
    <div class="container-fluid mt-4">
        <h1 class="mb-4">Liste des Trajets</h1>

        <div class="row">
            <div class="col-md-4">
                <!-- Affichage des statistiques -->
                <div class="card">
                    <div class="card-header">
                        <h4>Statistiques</h4>
                    </div>
                    <div class="card-body">
                        <p><strong>Total des trajets :</strong> {{ totalTrajets }}</p>
                        <p><strong>Distance totale parcourue :</strong> {{ totalDistance }} km</p>
                        <p><strong>Durée totale estimée :</strong> {{ totalDuration }}</p>
                    </div>
                </div>
            </div>
        </div>

        {% if trajets is not empty %}
            <div class="table-responsive mt-3">
                <table class="table table-striped table-hover">
                    <thead class="thead-dark">
                        <tr>
                            <th>ID</th>
                            <th>Point de départ</th>
                            <th>Point d'arrivée</th>
                            <th>Distance</th>
                            <th>Durée estimée</th>
                            <th>Moyen de transport</th>
                            <th>Employé</th>
                            <th>Statut</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        {% for trajet in trajets %}
                            <tr>
                                <td>{{ trajet.id_T }}</td>
                                <td>{{ trajet.point_dep }}</td>
                                <td>{{ trajet.point_arr }}</td>
                                <td>{{ trajet.distance }} km</td>
                                <td>{{ trajet.durée_estimé ? trajet.durée_estimé|date('H:i') : '' }}</td>  <!-- Fix date format -->
                                <td>{{ trajet.moyenTransport.type_moyen }}</td>
                                <td>{{ trajet.id_employe }}</td>
                                <td>{{ trajet.status ? trajet.status.value : 'Non défini' }}</td>  <!-- Handle enum value properly -->
                                <td>
                                    <button type="button" class="btn btn-primary edit-button" 
                                        data-bs-toggle="modal" 
                                        data-bs-target="#EditModal" 
                                        data-id="{{ trajet.id_T }}">Modifier</button>
                                    
                                    <button class="btn btn-danger btn-delete" 
                                        data-id="{{ trajet.id_T }}">Supprimer</button>
                                </td>
                            </tr>
                        {% endfor %}
                    </tbody>
                </table>
            </div>
        {% else %}
            <div class="alert alert-info">Aucun trajet disponible.</div>
        {% endif %}

        <div class="mt-3">
            <button class="btn btn-success" data-bs-toggle="modal" data-bs-target="#ajoutTrajetModal">
                Ajouter un nouveau trajet
            </button>
        </div>
    </div>

    {% include 'trajet/edit.html.twig' %}
    {% include 'trajet/add.html.twig' %}
    
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            document.querySelectorAll(".edit-button").forEach(button => {
                button.addEventListener("click", function () {
                    let id = this.getAttribute("data-id");

                    console.log("Fetching data for trajet ID:", id);

                    fetch(`/trajet/${id}`)
                        .then(response => {
                            if (!response.ok) {
                                return response.text().then(text => { 
                                    throw new Error(`Erreur serveur: ${response.status} - ${text}`); 
                                });
                            }
                            return response.json();
                        })
                        .then(data => {
                            console.log("Received data:", data);

                            if (!data || !data.id_T) {
                                alert("Erreur: Aucune donnée trouvée pour ce trajet.");
                                return;
                            }

                            document.getElementById("id_T").value = data.id_T;
                            document.getElementById("point_dep").value = data.point_dep;
                            document.getElementById("point_arr").value = data.point_arr;
                            document.getElementById("distance").value = data.distance;
                            document.getElementById("durée_estimé").value = data.durée_estimé;
                            document.getElementById("id_employe").value = data.id_employe;
                            document.getElementById("status").value = data.status;

                            const selectMoyen = document.getElementById("id_moyen");
                            selectMoyen.innerHTML = '';

                            if (data.moyensTransport && data.moyensTransport.length > 0) {
                                data.moyensTransport.forEach(moyen => {
                                    const option = document.createElement('option');
                                    option.value = moyen.id;
                                    option.textContent = `${moyen.type_moyen} (${moyen.immatriculation})`;

                                    if (moyen.id === data.id_moyen) {
                                        option.selected = true;
                                    }

                                    selectMoyen.appendChild(option);
                                });
                            } else {
                                selectMoyen.innerHTML = '<option value="">Aucun moyen de transport disponible</option>';
                            }
                        })
                        .catch(error => {
                            console.error("Erreur lors de la récupération:", error);
                            alert("Une erreur est survenue lors de la récupération des données: " + error.message);
                        });
                });
            });

            // Form submission event listener for editing
            const editForm = document.getElementById('editTrajetForm');
            if (editForm) {
                editForm.addEventListener('submit', function(e) {
                    e.preventDefault();

                    let id = document.getElementById("id_T").value;
                    if (!id) {
                        alert("Erreur : ID du trajet manquant.");
                        return;
                    }

                    let formData = new FormData(this);

                    // Debug log
                    console.log(`Submitting edit for trajet ID: ${id}`);
                    
                    fetch(`/trajet/edit/${id}`, {
                        method: 'POST',
                        body: formData
                    })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Network response was not ok: ' + response.status);
                        }
                        return response.json();
                    })
                    .then(data => {
                        console.log("Response:", data);
                        alert(data.message || data.error);
                        if (!data.error) location.reload();
                    })
                    .catch(error => {
                        console.error('Erreur:', error);
                        alert("Une erreur est survenue lors de la modification: " + error.message);
                    });
                });
            }

            // Delete button event listener
            document.querySelectorAll('.btn-delete').forEach(button => {
                button.addEventListener('click', function() {
                    if (!confirm('Voulez-vous vraiment supprimer ce trajet ?')) return;

                    fetch(`/trajet/delete/${this.dataset.id}`, { method: 'DELETE' })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Network response was not ok: ' + response.status);
                        }
                        return response.json();
                    })
                    .then(data => {
                        alert(data.message || data.error);
                        if (!data.error) location.reload();
                    })
                    .catch(error => {
                        console.error('Erreur:', error);
                        alert("Une erreur est survenue lors de la suppression: " + error.message);
                    });
                });
            });
        });
    </script>
{% endblock %}
