<!-- Popup d'ajout d'abonnement -->
<div class="modal fade" id="ajoutAbonnementModal" tabindex="-1" aria-labelledby="ajoutAbonnementLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="ajoutAbonnementLabel">Ajouter un Abonnement</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="ajoutAbonnementForm">
                    <div class="mb-3">
                        <label for="type_Ab" class="form-label">Type</label>
                        <select id="type_Ab" name="type_Ab" class="form-control">
                            <option value="Mensuel">Mensuel</option>
                            <option value="Trimestriel">Trimestriel</option>
                            <option value="Annuel">Annuel</option>
                        </select>
                    </div>

                    <!-- Date de début automatiquement remplie -->
                    <div class="mb-3">
                        <label for="date_debut" class="form-label">Date de Début</label>
                        <input type="text" id="date_debut" name="date_debut" class="form-control" readonly>
                    </div>

                    <!-- Date d'expiration -->
                    <div class="mb-3">
                        <label for="date_exp" class="form-label">Date d'Expiration</label>
                        <input type="date" id="date_exp" name="date_exp" class="form-control" required>
                    </div>

                    <div class="mb-3">
                        <label for="prix" class="form-label">Prix</label>
                        <input type="number" id="prix" name="prix" class="form-control" required>
                    </div>

                    <div class="mb-3">
                        <label for="id_employe" class="form-label">Employé</label>
                        <input type="number" id="id_employe" name="id_employe" class="form-control" required>
                    </div>

                    <div class="mb-3">
                        <label for="status" class="form-label">Statut</label>
                        <select id="status" name="status" class="form-control">
                            <option value="ACTIF">ACTIF</option>
                            <option value="EXPIRE">EXPIRE</option>
                            <option value="SUSPENDU">SUSPENDU</option>
                        </select>
                    </div>

                    <button type="submit" class="btn btn-success">Enregistrer</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
// Fonction pour définir la date du jour au format souhaité
function setCurrentDate() {
    // Obtenir la date actuelle
    const currentDate = new Date();
    
    // Format de la date au format "DD/MM/YYYY"
    const day = String(currentDate.getDate()).padStart(2, '0');
    const month = String(currentDate.getMonth() + 1).padStart(2, '0');
    const year = currentDate.getFullYear();
    
    const formattedDate = `${day}/${month}/${year}`;
    
    // Essayer de trouver le champ de date de début de différentes manières
    // 1. Par ID exact
    const dateField = document.getElementById('date_debut');
    
    // 2. Par sélecteur de champ dans le formulaire
    if (!dateField || dateField.value === '') {
        const dateFields = document.querySelector('#ajoutAbonnementForm input[name="date_debut"]');
        if (dateFields) dateFields.value = formattedDate;
    } else {
        dateField.value = formattedDate;
    }
    
    // 3. Par tous les champs sous "Date de Début"
    const dateLabels = document.querySelectorAll('label');
    dateLabels.forEach(label => {
        if (label.textContent.includes('Date de Début')) {
            const nextInput = label.nextElementSibling;
            if (nextInput && nextInput.tagName === 'INPUT') {
                nextInput.value = formattedDate;
            }
            
            // Essayer de trouver le champ dans le même groupe
            const parent = label.parentElement;
            if (parent) {
                const inputs = parent.querySelectorAll('input');
                inputs.forEach(input => {
                    input.value = formattedDate;
                });
            }
        }
    });
}

// Exécuter immédiatement et lors de l'ouverture de la modal
document.addEventListener('DOMContentLoaded', function() {
    // Exécuter 100ms après le chargement pour laisser le temps aux composants de s'initialiser
    setTimeout(setCurrentDate, 100);
    
    // Observer l'ouverture de la modal
    const modalElement = document.getElementById('ajoutAbonnementModal');
    if (modalElement) {
        modalElement.addEventListener('shown.bs.modal', function() {
            // Exécuter avec un petit délai pour s'assurer que tous les éléments sont initialisés
            setTimeout(setCurrentDate, 100);
        });
    }
    
    // Surveiller également le clic sur le bouton qui ouvre la modal
    const modalTriggers = document.querySelectorAll('[data-bs-toggle="modal"][data-bs-target="#ajoutAbonnementModal"]');
    modalTriggers.forEach(trigger => {
        trigger.addEventListener('click', function() {
            // Exécuter avec un délai légèrement plus long pour l'ouverture de la modal
            setTimeout(setCurrentDate, 300);
        });
    });
});

// Soumission du formulaire
document.getElementById('ajoutAbonnementForm').addEventListener('submit', function(e) {
    e.preventDefault();

    const formData = new FormData(this);
    
    fetch('{{ path('abonnement_new') }}', {
        method: 'POST',
        body: formData
    })
    .then(response => response.json())
    .then(data => {
        if (data.error) {
            alert(data.error);
        } else {
            alert('Abonnement ajouté avec succès');
            location.reload();
        }
    })
    .catch(error => {
        console.error('Erreur:', error);
    });
});
</script>